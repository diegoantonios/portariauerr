/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.uerr.appportariasolo.visao;

import br.edu.uerr.appportariasolo.controler.PessoaGeralJpaController;
import br.edu.uerr.appportariasolo.controler.PortariaJpaController;
import br.edu.uerr.appportariasolo.modelo.PessoaGeral;
import br.edu.uerr.appportariasolo.modelo.Portaria;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.swing.JOptionPane;

/**
 *
 * @author Diego_Note
 */
public class UISelecaoPortaria extends javax.swing.JFrame {

    /**
     * Creates new form UISelecaoPortaria
     */
    public UISelecaoPortaria() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        apportariasoloPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("apportariasoloPU").createEntityManager();
        pessoaGeralQuery = java.beans.Beans.isDesignTime() ? null : apportariasoloPUEntityManager.createQuery("SELECT p FROM PessoaGeral p");
        pessoaGeralList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : pessoaGeralQuery.getResultList();
        portariaQuery = java.beans.Beans.isDesignTime() ? null : apportariasoloPUEntityManager.createQuery("SELECT p FROM Portaria p");
        portariaList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : portariaQuery.getResultList();
        pessoaGeralQuery1 = java.beans.Beans.isDesignTime() ? null : apportariasoloPUEntityManager.createQuery("SELECT p FROM PessoaGeral p");
        pessoaGeralList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : pessoaGeralQuery1.getResultList();
        portariaQuery1 = java.beans.Beans.isDesignTime() ? null : apportariasoloPUEntityManager.createQuery("SELECT p FROM Portaria p");
        portariaList1 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : portariaQuery1.getResultList();
        portariaQuery2 = java.beans.Beans.isDesignTime() ? null : apportariasoloPUEntityManager.createQuery("SELECT p FROM Portaria p");
        portariaList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : portariaQuery2.getResultList();
        pessoaGeralQuery2 = java.beans.Beans.isDesignTime() ? null : apportariasoloPUEntityManager.createQuery("SELECT p FROM PessoaGeral p");
        pessoaGeralList2 = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : pessoaGeralQuery2.getResultList();
        jLabel1 = new javax.swing.JLabel();
        bFecharPortaria = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        vDataEntradaBusca = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        vNomePessoaBusca = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        vDescricaoPesquisada = new javax.swing.JTextField();
        bPesquisaPortaria = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        vCpfPessoaBusca = new javax.swing.JTextField();
        vTipoPesquisada = new javax.swing.JTextField();
        vNomePessoaPesquisada = new javax.swing.JTextField();
        vCpfPesquisada = new javax.swing.JTextField();
        vDataHoraSaidaPesquisada = new javax.swing.JTextField();
        vDataHoraEntradaPesquisada = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        vSexoPesquisado = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Arial Black", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 153, 153));
        jLabel1.setText("Portarias");
        jLabel1.setToolTipText("");
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        bFecharPortaria.setText("Fechar Portaria");
        bFecharPortaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFecharPortariaActionPerformed(evt);
            }
        });

        jLabel2.setText("Data de Entrada da Portaria:");

        jLabel3.setText("Nome da Pessoa:");

        jLabel4.setText("CPF:");

        bPesquisaPortaria.setText("Pesquisar Portaria");
        bPesquisaPortaria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPesquisaPortariaActionPerformed(evt);
            }
        });

        jLabel5.setText("Data e hora de Entrada da Portaria Pesquisada:");

        jLabel6.setText("Data e hora de Saida da Portaria Pesquisada:");

        jLabel7.setText("Nome da Pessoa:");

        jLabel8.setText("Tipo da Pessoa:");

        jLabel9.setText("Sexo");

        jLabel10.setText("CPF:");

        jLabel11.setText("Descricação da Entrada:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(vDataEntradaBusca, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(bPesquisaPortaria))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(vNomePessoaBusca, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)
                            .addComponent(vCpfPessoaBusca, javax.swing.GroupLayout.DEFAULT_SIZE, 354, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vDataHoraEntradaPesquisada))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vCpfPesquisada))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vNomePessoaPesquisada))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vDataHoraSaidaPesquisada))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(bFecharPortaria))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(vDescricaoPesquisada))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vTipoPesquisada)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(vSexoPesquisado)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(vDataEntradaBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(vNomePessoaBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bPesquisaPortaria)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(vCpfPessoaBusca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(vDataHoraEntradaPesquisada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(vDataHoraSaidaPesquisada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(vNomePessoaPesquisada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(vCpfPesquisada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(vSexoPesquisado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(vTipoPesquisada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vDescricaoPesquisada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(bFecharPortaria)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bFecharPortariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFecharPortariaActionPerformed
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("apportariasoloPU");
        PessoaGeralJpaController pessoaGeralJpaController = new PessoaGeralJpaController(emf);
        PortariaJpaController portariaJpaController = new PortariaJpaController(emf);
        List<Portaria> listaPortaria = new ArrayList<Portaria>();
        List<PessoaGeral> listaPessoa = new ArrayList<PessoaGeral>();
        PessoaGeral pessoa = new PessoaGeral();
        String nomePBusca = String.valueOf(vNomePessoaPesquisada.getText());
        String cpfPBusca = (String) vCpfPesquisada.getText();
        String dataDeEntrada = (String) vDataEntradaBusca.getText();
        Portaria portaria = new Portaria();
        Date data = new Date();
        SimpleDateFormat date = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        String dataAgora = String.valueOf(date.format(data));
        System.out.println(date.format(data));
        vDataHoraSaidaPesquisada.setText(dataAgora);
        String idPortariaPego;
        int idPortaria = 0;
        String idPessoaPego;
        int idPessoa = 0;

        try {

            listaPortaria = portariaJpaController.listaIdPortaria(nomePBusca, cpfPBusca, dataDeEntrada);
            for (int i = 0; i <= listaPortaria.size(); i++) {
                idPortariaPego = String.valueOf(listaPortaria.get(i));
                idPortaria = Integer.valueOf(idPortariaPego);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        //portaria.setDataHoraSaida(vDataHoraSaidaPesquisada.getText());
        portaria.setIdPortaria(idPortaria);
        portaria.setDescricao(vDescricaoPesquisada.getText());

        //IDPESSOAGERALFK portaria
        try {

            listaPortaria = portariaJpaController.listaIdPessoaGeralPortaria(nomePBusca, cpfPBusca, dataDeEntrada);
            for (int i = 0; i <= listaPortaria.size(); i++) {
                idPortariaPego = String.valueOf(listaPortaria.get(i));
                idPortaria = Integer.valueOf(idPortariaPego);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        portaria.setIdPessoaGeral(new PessoaGeral());
        pessoa = pessoaGeralJpaController.findPessoaGeral(idPortaria);
        portaria.setIdPessoaGeral(pessoa);

        /*
        //setar id fk
                try {

            listaPessoa = pessoaGeralJpaController.listaIdPessoa(nomePBusca, cpfPBusca);
            for (int i = 0; i <= listaPessoa.size(); i++) {
                idPessoaPego = String.valueOf(listaPessoa.get(i));
                idPessoa = Integer.valueOf(idPessoaPego);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        portaria.setIdPessoaGeral(new PessoaGeral());
        pessoa = pessoaGeralJpaController.findPessoaGeral(idPessoa);
        portaria.setIdPessoaGeral(pessoa);
         */
        try {
            if (!vDataHoraEntradaPesquisada.getText().isEmpty()) {
                portaria.setDataHoraEntrada((Date) date.parse(vDataHoraEntradaPesquisada.getText()));
            }
            if (!vDataHoraSaidaPesquisada.getText().isEmpty()) {
                portaria.setDataHoraSaida((Date) date.parse(vDataHoraSaidaPesquisada.getText()));
            }
            portariaJpaController.edit(portaria);
            JOptionPane.showMessageDialog(null, "Portaria Fechada Com Sucesso");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e.getMessage());
        }

// TODO add your handling code here:
    }//GEN-LAST:event_bFecharPortariaActionPerformed

    private void bPesquisaPortariaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPesquisaPortariaActionPerformed
        vDataHoraSaidaPesquisada.setText("");
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("apportariasoloPU");
        PortariaJpaController portariaJpaController = new PortariaJpaController(emf);
        PessoaGeralJpaController pessoaGeralJpaController = new PessoaGeralJpaController(emf);
        List<Portaria> listaPortaria = new ArrayList<Portaria>();
        List<PessoaGeral> listaPessoa = new ArrayList<PessoaGeral>();
        PessoaGeral pessoa = new PessoaGeral();
        String nomePBusca = String.valueOf(vNomePessoaBusca.getText());
        String cpfPBusca = (String) vCpfPessoaBusca.getText();
        String dataDeEntrada = (String) vDataEntradaBusca.getText();
        String dataDeEntradaAT;
        String aux = null;
        int auxx = 0;
        String idPessoaPego;
        int idPessoa = 0;
        int sexoDBuscado = 0;
        SimpleDateFormat date = new SimpleDateFormat("dd/MM/yyyy HH:mm:ss");
        Date data = new Date();

        Portaria portaria = new Portaria();

        //Data e Hora Entreda
        try {

            listaPortaria = portariaJpaController.listaDataEntrada(nomePBusca, cpfPBusca, dataDeEntrada);
            for (int i = 0; i <= listaPortaria.size(); i++) {
                //aux = String.valueOf(listaPortaria.get(i));
                //auxx= Integer.valueOf(aux);
                //vDataHoraEntradaPesquisada.setText((Date) date.parse(aux));
                vDataHoraEntradaPesquisada.setText(String.valueOf(date.format(listaPortaria.get(i))));
                //String dataAgora = String.valueOf(date.format(data));
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        dataDeEntradaAT = (String) vDataHoraEntradaPesquisada.getText();

        //Data e Hora Saida
        try {

            listaPortaria = portariaJpaController.listaDataSaida(nomePBusca, cpfPBusca, dataDeEntradaAT);
            for (int i = 0; i <= listaPortaria.size(); i++) {
                //aux = String.valueOf(listaPortaria.get(i));
                vDataHoraSaidaPesquisada.setText(String.valueOf(date.format(listaPortaria.get(i))));
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        //Nome da Pessoa 
        try {

            listaPortaria = portariaJpaController.listaNome(nomePBusca, cpfPBusca, dataDeEntrada);
            for (int i = 0; i <= listaPortaria.size(); i++) {
                aux = String.valueOf(listaPortaria.get(i));
                vNomePessoaPesquisada.setText(aux);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        //Cpf da Pessoa
        try {

            listaPortaria = portariaJpaController.listaCpf(nomePBusca, cpfPBusca, dataDeEntrada);
            for (int i = 0; i <= listaPortaria.size(); i++) {
                aux = String.valueOf(listaPortaria.get(i));
                vCpfPesquisada.setText(aux);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        //Sexo da Pessoa
        try {

            listaPessoa = pessoaGeralJpaController.listaSexoPessoa(nomePBusca, cpfPBusca);
            for (int i = 0; i <= listaPessoa.size(); i++) {
                aux = String.valueOf(listaPessoa.get(i));
                sexoDBuscado = Integer.valueOf(aux);
                if (sexoDBuscado == 1) {
                    vSexoPesquisado.setText("Masculino");
                } else {
                    vSexoPesquisado.setText("Feminino");
                }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
//Tipo da Pessoa
        try {

            listaPessoa = pessoaGeralJpaController.listaTipoPessoaFunc(nomePBusca, cpfPBusca);
            for (int i = 0; i <= listaPessoa.size(); i++) {
                aux = String.valueOf(listaPessoa.get(i));
                if (Objects.equals(aux, nomePBusca)) {
                    vTipoPesquisada.setText("Funcionario");
                } else {
                    vTipoPesquisada.setText(nomePBusca);
                }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        try {

            listaPessoa = pessoaGeralJpaController.listaTipoPessoaAlun(nomePBusca, cpfPBusca);
            for (int i = 0; i <= listaPessoa.size(); i++) {
                aux = String.valueOf(listaPessoa.get(i));
                if (Objects.equals(aux, nomePBusca)) {
                    vTipoPesquisada.setText("Aluno");
                } else {
                    vTipoPesquisada.setText(nomePBusca);
                }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        try {

            listaPessoa = pessoaGeralJpaController.listaTipoPessoaVis(nomePBusca, cpfPBusca);
            for (int i = 0; i <= listaPessoa.size(); i++) {
                aux = String.valueOf(listaPessoa.get(i));
                if (Objects.equals(aux, nomePBusca)) {
                    vTipoPesquisada.setText("Vizitante");
                } else {
                    vTipoPesquisada.setText(nomePBusca);
                }
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }

        //Descricao da Portaria
        try {

            listaPortaria = portariaJpaController.listaDescricao(nomePBusca, cpfPBusca, dataDeEntrada);
            for (int i = 0; i <= listaPortaria.size(); i++) {
                aux = String.valueOf(listaPortaria.get(i));
                vDescricaoPesquisada.setText(aux);
            }
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
        //

        // TODO add your handling code here:
    }//GEN-LAST:event_bPesquisaPortariaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UISelecaoPortaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UISelecaoPortaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UISelecaoPortaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UISelecaoPortaria.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UISelecaoPortaria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.persistence.EntityManager apportariasoloPUEntityManager;
    private javax.swing.JButton bFecharPortaria;
    private javax.swing.JButton bPesquisaPortaria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private java.util.List<br.edu.uerr.appportariasolo.modelo.PessoaGeral> pessoaGeralList;
    private java.util.List<br.edu.uerr.appportariasolo.modelo.PessoaGeral> pessoaGeralList1;
    private java.util.List<br.edu.uerr.appportariasolo.modelo.PessoaGeral> pessoaGeralList2;
    private javax.persistence.Query pessoaGeralQuery;
    private javax.persistence.Query pessoaGeralQuery1;
    private javax.persistence.Query pessoaGeralQuery2;
    private java.util.List<br.edu.uerr.appportariasolo.modelo.Portaria> portariaList;
    private java.util.List<br.edu.uerr.appportariasolo.modelo.Portaria> portariaList1;
    private java.util.List<br.edu.uerr.appportariasolo.modelo.Portaria> portariaList2;
    private javax.persistence.Query portariaQuery;
    private javax.persistence.Query portariaQuery1;
    private javax.persistence.Query portariaQuery2;
    private javax.swing.JTextField vCpfPesquisada;
    private javax.swing.JTextField vCpfPessoaBusca;
    private javax.swing.JTextField vDataEntradaBusca;
    private javax.swing.JTextField vDataHoraEntradaPesquisada;
    private javax.swing.JTextField vDataHoraSaidaPesquisada;
    private javax.swing.JTextField vDescricaoPesquisada;
    private javax.swing.JTextField vNomePessoaBusca;
    private javax.swing.JTextField vNomePessoaPesquisada;
    private javax.swing.JTextField vSexoPesquisado;
    private javax.swing.JTextField vTipoPesquisada;
    // End of variables declaration//GEN-END:variables
}
